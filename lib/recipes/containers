# -*- mode: shell-script -*-

_exec_as_user () {
    local user=$1
    local command=$2

    su - $user -c "$command"
}

validate_container () {
    local user=$1
    local box=$2

    debug "  validate_container $user $box"

    if validate_user $user; then
        return 0
    fi
    return 1;
}

enable_unprivileged_containers () {
    debug "  enable_unprivileged_containers"

    echo 1 > /sys/fs/cgroup/cpuset/cgroup.clone_children
    /sbin/sysctl -w kernel.unprivileged_userns_clone=1
}

disable_unprivileged_containers () {
    debug "  disable_unprivileged_containers"

    echo 0 > /sys/fs/cgroup/cpuset/cgroup.clone_children
    /sbin/sysctl -w kernel.unprivileged_userns_clone=0
}

# create the user's control groups if they are not existing yet
create_user_cgroups () {
    local user=$1

    debug "  create_user_cgroups for $user"

    if validate_user $user; then
        cgm create all $user
        cgm chown all $user $(id -u $user) $(id -g $user)
        return $?
    fi
    return 1
}

destroy_user_cgroups () {
    local user=$1

    debug "  destroy_user_cgroups for $user"

    if validate_user $user; then
        cgm remove all $user
        return $?
    fi
    return 1
}

create_user_lxc_folders () {
    local user=$1

    debug "  create_user_lxc_folders for user $user"

    if validate_user $user; then
        home=$(user_home $user)

        mkdir -p ${home}/.cache/lxc
        mkdir -p ${home}/.config/lxc
        mkdir -p ${home}/.local/share/lxc

        for folder in .cache .config .local; do
            chown -R $user:$user ${home}/${folder}
        done
        return 0
    fi
    return 1
}

create_user_lxc_default_config () {
    local user=$1

    if validate_user $user; then
        home=$(user_home $user)
        uid_map=$(user_subuids $user)
        gid_map=$(user_subgids $user)

        echo $home $uid_map $gid_map
        return 0

        cat > ${home}/.config/lxc/default.conf <<EOF
lxc.network.type = veth
lxc.network.link = br0
lxc.network.flags = up
lxc.id_map = u 0 $uid_map
lxc.id_map = g 0 $gid_map
EOF

        chown $user:$user ${home}/.config/lxc/default.conf
        return 0
    fi
    return 1
}

create_user_container_config () {
    local user=$1
    local box=$2
    local boxip=$3
    local netmask=$4
    local gateway=$5

    # TODO: complete all necessary container's parameters
    box_config=/home/${user}/.local/share/lxc/${box}/config
    cat >> $box_config <<EOF
lxc.network.ipv4 = ${boxip}/${netmask}
lxc.network.ipv4.gateway = ${gateway}
EOF
}

adjust_internal_container_config () {
    local user=$1
    local box=$2
    :

    # TODO: fix every necessary bit that's not set in the default image
    #       network is the first thing that comes to mind
}

create_user_container () {
    local user=$1
    local box=$2

    _exec_as_user $user \
                  "cgm movepid all $user $$ && lxc-create -n $box -t download -- -d debian -r wheezy -a amd64"

}

start_user_container () {
    local user=$1
    local box=$2

    _exec_as_user $user \
                  "cgm movepid all $user $$ && lxc-start -n $box -d"
}

stop_user_container () {
    local user=$1
    local box=$2

    _exec_as_user $user \
                  "cgm movepid all $user $$ && lxc-stop -n $box"
}
