#!/bin/bash

__DEBUG__=1

set -e

SCRIPTDIR=$(dirname $0)

source $SCRIPTDIR/../utilities
source $SCRIPTDIR/containers

#
# users' containers management routines
#

start_box () {
    local user=$1
    local box=$2

    print_banner " -- starting ${user}'s box ${box}"

    enable_unprivileged_containers
    create_user_groups $user
    start_user_container $user $box
}

stop_box () {
    local user=$1
    local box=$2

    print_banner " -- stopping ${user}'s box ${box}"

    stop_user_container $user $box
}

status_box () {
    local user=$1
    local box=$2

    print_banner " -- status of ${user}'s box ${box}"
}


#
# framework callable routines
#

_usage () {
    cat <<EOF

$(basename $0) start|stop|status --user=... --box=...

The Mezzapp user's LXC container controller script.

where 'start' starts the users'box
      'stop' stops the user's box
      'status' returns the user's box status

and where '--user' is given the name of an existing user
    and '--box' is given the name of a container belonging
    to the given user.

both arguments are mandatory.

EOF
}

_initargs () {
    _start=0
    _stop=0
    _status=0

    user=""
    box=""
    help=0
    syslog=0
}

_validateargs () {
    if [ $_start = 0 -a $_stop = 0 -a $_status = 0 ]; then
        printf "\n\nParameters without command have no meaning.\n"
        usage
        exit 1
    fi

    if [  "$user" = "" -o "$box" = "" ]; then
        printf "\n\nYou must give both --user and --box parameters.\n"
        usage
        exit 1
    fi

    if ! validate_user $user; then
        printf "\n\nUser must be an existing Unix user on this cell.\n"
        usage
        exit 1
    fi

    if ! validate_container $user $box; then
        printf "\n\nBox must belong to an existing Unix user on this cell.\n"
        usage
        exit 1
    fi

}

_run () {
    if [ $_start = 1 ]; then
        start_box $user $box
    fi

    if [ $_stop = 1 ]; then
        stop_box $user $box
    fi

    if [ $_status = 1 ]; then
        status_box $user $box
    fi
}

source $SCRIPTDIR/../base

initargs help user: box:
initcommands start stop status

run $@
